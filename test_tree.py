from algs.algorithms.tree import BinaryTree, BinarySortTree


print("BinaryTree:")
tree = BinaryTree()
for i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:
    tree.add(i)
print("pre:")
print(tree.travel("pre"))
print('################')
print("in:")
print(tree.travel("in"))
print('################')
print("post:")
print(tree.travel("post"))
print('################')
print("leaves:")
print(tree.leaves)

print("########################################")
print("########################################")
print("BinarySortTree:")
tree = BinarySortTree()
for i in [5, 2, 3, 4, 1, 6, 7, 8, 9, 10]:
    tree.add(i)
print("pre:")
print(tree.travel("pre"))
print('################')
print("in:", "二叉查找树的中序遍历是一个有序数列")
print(tree.travel("in"))
print('################')
print("post:")
print(tree.travel("post"))
print('################')
print("leaves:")
print(tree.leaves)
print('################')
print("minimum:")
print(tree.minimum)
print('################')
print("maximum:")
print(tree.maximum)
print('################')
print("5's successor value")
print(tree.get_successor_value(5))
print('################')
print("5's predecessor value")
print(tree.get_predecessor_value(5))
print('################')
print("delete 2")
tree.delete_value(2)
print(tree.travel("in"))

